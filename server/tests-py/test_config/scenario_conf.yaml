default: {}
corsDomains:
  hge:
   env:
     HASURA_GRAPHQL_CORS_DOMAIN: 'http://*.localhost, http://localhost:3000, https://*.foo.bar.com'
  pytest:
    defaultTests:
    - test_cors.py
    args:
    - --test-cors
websocketReadCookieCorsEnabled: &WSRCCE
  pytest:
    defaultTests:
    - test_websocket_init_cookie.py
    args:
    - --test-ws-init-cookie=read
  auth:
    webhook:
      mode: post
  authWebhookPath : '/cookie-auth'
websocketReadCookieCorsDisabled:
  <<: *WSRCCE
  hge:
    args:
    - --disable-cors
    env:
      HASURA_GRAPHQL_WS_READ_COOKIE: 'true'
websocketNoReadCookieCorsDisabled:
  <<: *WSRCCE
  hge:
    args:
    - '--disable-cors'
  pytest:
    defaultTests:
    - test_websocket_init_cookie.py
    args:
    - --test-ws-init-cookie=noread
graphqlApiDisabledEnv: &NoGQLEnv
  hge:
    env:
      HASURA_GRAPHQL_ENABLED_APIS: metadata
  pytest:
    defaultTests:
    - test_apis_disabled.py
    args:
    - --test-graphql-disabled
graphqlApiDisabledArg:
  <<: *NoGQLEnv
  hge:
    args:
    - --enabled-apis
    - metadata
metadataApiDisabledEnv: &NoMetadataEnv
  hge:
    env:
      HASURA_GRAPHQL_ENABLED_APIS: graphql
  pytest:
    defaultTests:
    - test_apis_disabled.py
    args:
    - --test-metadata-disabled
metadataApiDisabledArg:
  <<: *NoMetadataEnv
  hge:
    args:
    - --enabled-apis
    - graphql
horizontalScaling:
  postgres:
    withPgbouncerProxy: true
  withHgeReplica: true
  pytest:
    defaultTests:
    - test_horizontal_scale.py
allowListEnabledEnv: &allowListEnv
  hge:
    env:
      HASURA_GRAPHQL_ENABLE_ALLOWLIST: 'true'
  pytest:
    defaultTests:
    - test_allowlist_queries.py
    args:
    - --test-allowlist-queries
allowListEnabledArg:
  <<: *allowListEnv
  hge:
    args:
    - --enable-allowlist
insecureGetWebhook: &gwi
  pytest:
    defaultTests:
    - test_webhook_insecure.py
    args:
    - --test-webhook-insecure
  auth:
    webhook:
      mode: get
      secure: false
insecurePostWebhook:
  <<: *gwi
  auth:
    webhook:
      mode: post
      secure: false
queryLogs:
  pytest:
    defaultTests:
    - test_logging.py
    args:
    - --test-logging
  hge:
    env:
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: 'startup,http-log,webhook-log,websocket-log,query-log'
jwtStringified:
  pytest: &jwt
    defaultTests:
    - test_jwt.py
  auth:
    jwt:
      stringified: true
jwtWithIssuer:
  pytest: *jwt
  auth:
    jwt:
      issuer: myissuer
jwtWithAudience:
  pytest: *jwt
  auth:
    jwt:
      audience: aud1
jwtWithAudienceList:
  pytest: *jwt
  auth:
    jwt:
      audience: [aud1, aud2]
